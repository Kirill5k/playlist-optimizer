name: Build pipeline

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: olafurpg/setup-scala@v2
        with:
          java-version: adopt@1.11
      - name: Run unit tests
        run: sbt clean test

  build-frontend:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Install dependencies
        run: npm install --prefix frontend
      - name: Build frontend
        run: npm run build --prefix frontend
      - name: Upload frontend for the next job
        uses: actions/upload-artifact@v2
        with:
          name: built-frontend
          path: |
            frontend/dist

  build-backend:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v2
      - uses: olafurpg/setup-scala@v2
        with:
          java-version: adopt@1.11
      - name: Build jar
        run: sbt assembly
      - name: Upload jar for the next job
        uses: actions/upload-artifact@v2
        with:
          name: built-backend
          path: |
            core/target/scala-2.13/playlist-optimizer.jar

  deploy:
    runs-on: ubuntu-latest
    needs: [build-frontend, build-backend]
    steps:
      - uses: actions/checkout@v2
      - name: Download built artifacts
        uses: actions/download-artifact@v2
      - name: List files
        shell: bash
        run: |
          value=`ls`
          echo v4 $value
      - name: Push to heroku
        uses: akhileshns/heroku-deploy@v3.5.6
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "playlist-optimizer"
          heroku_email: "immotional@aol.com"
          usedocker: true
          docker_build_args: |
            SERVER_PORT
            SERVER_DNS
            SPOTIFY_CLIENT_ID
            SPOTIFY_CLIENT_SECRET
        env:
          SERVER_DNS: "playlist-optimizer.herokuapp.com"
          SERVER_PORT: "8080"
          SPOTIFY_CLIENT_ID: ${{secrets.SPOTIFY_CLIENT_ID}}
          SPOTIFY_CLIENT_SECRET: ${{secrets.SPOTIFY_CLIENT_SECRET}}
